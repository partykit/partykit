diff --git a/node_modules/@astrojs/starlight/components/Head.astro b/node_modules/@astrojs/starlight/components/Head.astro
index ec2431f..487bf9c 100644
--- a/node_modules/@astrojs/starlight/components/Head.astro
+++ b/node_modules/@astrojs/starlight/components/Head.astro
@@ -13,6 +13,16 @@ const { data } = entry;
 
 const canonical = Astro.site ? new URL(Astro.url.pathname, Astro.site) : undefined;
 const description = data.description || config.description;
+const og = new URLSearchParams();
+
+const title = data.title || config.title;
+
+og.set("site", "PartyKit Docs");
+og.set("title", title);
+if (description && description !== "...") {
+  og.set("description", description);
+}
+const ogImage = `https://og.partykit.io/api/og?${og}`;
 
 const headDefaults: z.input<ReturnType<typeof HeadConfigSchema>> = [
 	{ tag: 'meta', attrs: { charset: 'utf-8' } },
@@ -50,6 +60,8 @@ const headDefaults: z.input<ReturnType<typeof HeadConfigSchema>> = [
 	},
 	{ tag: 'meta', attrs: { name: 'twitter:title', content: data.title } },
 	{ tag: 'meta', attrs: { name: 'twitter:description', content: description } },
+	{ tag: "meta", attrs: { name: "twitter:image", content: ogImage } },
+  { tag: "meta", attrs: { name: "og:image", content: ogImage } },
 ];
 
 if (description)
diff --git a/node_modules/@astrojs/starlight/utils/createTranslationSystem.ts b/node_modules/@astrojs/starlight/utils/createTranslationSystem.ts
index 9f2a5bf..97153b9 100644
--- a/node_modules/@astrojs/starlight/utils/createTranslationSystem.ts
+++ b/node_modules/@astrojs/starlight/utils/createTranslationSystem.ts
@@ -76,7 +76,9 @@ function buildDictionary(
 	// Iterate over alternate dictionaries to avoid overwriting preceding values with `undefined`.
 	for (const dict of dictionaries) {
 		for (const key in dict) {
+			// @ts-expect-error: `key` is a string, but TS doesn't know that.
 			const value = dict[key as keyof typeof dict];
+			// @ts-expect-error: `key` is a string, but TS doesn't know that.
 			if (value) dictionary[key as keyof typeof dict] = value;
 		}
 	}
