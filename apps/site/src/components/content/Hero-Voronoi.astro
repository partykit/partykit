---
import "../../styles/variables.scss";
import Voronoi from "../../interactive/Voronoi";
import HeroLoop from "./HeroLoop";
// Use by putting
// <span id="looper"><HeroLoop client:load /></span>
// in place of the looping text
---

<div id="hero">
  <h1>
    PartyKit is an open source deployment platform for AI agents, multiplayer
    and local-first apps, games and websites.
  </h1>
  <div id="voronoi">
    <Voronoi client:load />
  </div>
  <p>
    <strong>
      Everything <br /> is better with <br />
      <span id="looper"><HeroLoop client:only="react" /></span>
    </strong>
  </p>
</div>

<style lang="scss">
  @import "../../styles/shared.scss";

  #hero {
    grid-column: 1 / -1;
    margin: 0 -2rem -15vh;
    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: 1fr 1fr;
    gap: 1rem 0;
    height: 100vh;
    padding-top: 0;
    --animation-whitespace: 1.2em;
    @media (min-width: 760px) {
      --animation-whitespace: 1.05em;
    }
  }

  h1 {
    grid-column: 1 / -1;
    grid-row: 2 / 3;
    height: 100%;
    box-sizing: border-box;
    position: relative;
    z-index: 50;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: center;
    align-self: center;
    margin: 0 auto;
    padding: 2rem 0 15vh;
    max-width: 20em;
    @include font-core();
    strong {
      @include font-core-bold();
    }
    @media (min-width: 760px) {
      @include font-L();
      justify-content: start;
      strong {
        @include font-L-bold();
      }
    }
  }

  #voronoi {
    grid-column: 1 / -1;
    grid-row: 1 / 3;
    mask-image: linear-gradient(to bottom, #000 50%, transparent 95%);
  }

  p {
    grid-column: 1 / -1;
    grid-row: 1 / 2;
    height: 100%;
    box-sizing: border-box;
    position: relative;
    z-index: 50;
    @include font-L();
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: end;
    align-self: center;
    padding-top: 50px;
    strong {
      @include font-hero-bold();
    }
    @media (min-width: 760px) {
      @include font-XL();
      align-self: end;
      strong {
        @include font-XL-bold();
      }
    }
  }

  #looper {
    display: inline-block;
    position: relative;
    overflow: visible;
    width: 100%;
  }

  @keyframes hero-loop {
    0% {
      transform: translateY(0);
    }
    7% {
      transform: translateY(0);
    }
    9% {
      transform: translateY(calc(var(--animation-whitespace) * -2));
    }
    16% {
      transform: translateY(calc(var(--animation-whitespace) * -2));
    }
    18% {
      transform: translateY(calc(var(--animation-whitespace) * -4));
    }
    25% {
      transform: translateY(calc(var(--animation-whitespace) * -4));
    }
    27% {
      transform: translateY(calc(var(--animation-whitespace) * -6));
    }
    34% {
      transform: translateY(calc(var(--animation-whitespace) * -6));
    }
    36% {
      transform: translateY(calc(var(--animation-whitespace) * -8));
    }
    43% {
      transform: translateY(calc(var(--animation-whitespace) * -8));
    }
    45% {
      transform: translateY(calc(var(--animation-whitespace) * -10));
    }
    52% {
      transform: translateY(calc(var(--animation-whitespace) * -10));
    }
    54% {
      transform: translateY(calc(var(--animation-whitespace) * -12));
    }
    61% {
      transform: translateY(calc(var(--animation-whitespace) * -12));
    }
    63% {
      transform: translateY(calc(var(--animation-whitespace) * -14));
    }
    70% {
      transform: translateY(calc(var(--animation-whitespace) * -14));
    }
    72% {
      transform: translateY(calc(var(--animation-whitespace) * -16));
    }
    79% {
      transform: translateY(calc(var(--animation-whitespace) * -16));
    }
    81% {
      transform: translateY(calc(var(--animation-whitespace) * -18));
    }
    88% {
      transform: translateY(calc(var(--animation-whitespace) * -18));
    }
    90% {
      transform: translateY(calc(var(--animation-whitespace) * -20));
    }
    98% {
      transform: translateY(calc(var(--animation-whitespace) * -20));
    }
    100% {
      transform: translateY(calc(var(--animation-whitespace) * -22));
    }
  }

  .animation-frame {
    position: relative;
    overflow: visible;
    .animation-block {
      position: absolute;
      margin: -20px 0;
      padding: 20px 0;
      height: calc(var(--animation-whitespace) + 20px + 20px);
      overflow: hidden;
      mask-image: linear-gradient(
        to bottom,
        transparent 0,
        #000 20px,
        #000 calc(100% - 20px),
        transparent 100%
      );
      .animation-item {
        margin: 0 0 calc(var(--animation-whitespace) * 0.9975) 0;
        transform: translateY(0);
        animation: hero-loop 20s ease-out 1s infinite;
        -moz-animation: hero-loop 20s ease-out 1s infinite;
        -webkit-animation: hero-loop 20s ease-out 1s infinite;
        -o-animation: hero-loop 20s ease-out 1s infinite;
        display: block;
        width: 100%;
        white-space: nowrap;
        @media (min-width: 760px) {
          margin: 0 0 var(--animation-whitespace) 0;
        }
      }
    }
  }
</style>
