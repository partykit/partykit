---
import Layout from "@layouts/Layout.astro";
import Tag from "@components/Tag.astro";
import Datetime from "@components/Datetime";
import type { CollectionEntry } from "astro:content";
import { slugifyStr } from "@utils/slugify";

export interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;

const { title, author, description, ogImage, canonicalURL, pubDatetime, tags } =
  post.data;

const { Content } = await post.render();

const ogUrl = new URL(ogImage ? ogImage : `${title}.png`, Astro.url.origin)
  .href;
---

<Layout
  title={title}
  author={author}
  description={description}
  ogImage={ogUrl}
  canonicalURL={canonicalURL}
>
  <div class="breadcrumb">
    <span onclick="history.back()">Go back</span>
  </div>
  <main id="main-content">
    <h1 class="font-hero">{title}</h1>
    <div class="metadata mx-auto max-w-2xl">
      <span>{author ?? "PartyKit Team"}</span>
      <Datetime datetime={pubDatetime} />
    </div>
    <article id="article" role="article" class="mx-auto max-w-2xl">
      <Content />
    </article>

    <ul class="tags-container">
      {tags.map(tag => <Tag name={slugifyStr(tag)} />)}
    </ul>
  </main>
</Layout>

<style>
  h1 {
    max-width: 15em;
    padding: 0 2rem;
    margin: calc(var(--whitespace) - 50px) auto calc(var(--whitespace) * 0.5);
  }

  .breadcrumb {
    box-sizing: border-box;
    padding: 50px 1rem 0;
    height: 100px;
    border-bottom: 1px solid var(--color-feature-1);
    display: flex;
    flex-direction: row;
    align-items: center;
  }
  @media (min-width: 760px) {
    .breadcrumb {
      padding-left: 2rem;
      padding-right: 2rem;
    }
  }
  @media (min-width: 1100px) {
    .breadcrumb {
      width: calc(80% - 3rem);
      margin: 0 auto;
    }
  }
  .breadcrumb span {
    cursor: pointer;
  }
  .breadcrumb span:last-child:before {
    content: "←";
    position: relative;
    left: 0;
    padding-right: var(--character-width);
    transition: 0.3s ease 0.3s;
  }

  .breadcrumb span:hover::before {
    left: -0.25em;
  }
  .metadata {
    padding: 0 3rem;
    display: flex;
    flex-direction: row;
    gap: 0;
    margin-bottom: 1rem;
    color: var(--color-feature-2);
  }
  .metadata:after {
    content: ".";
  }
  .metadata > *:after {
    content: ",";
    padding-right: var(--character-width);
  }

  @media (max-width: 759px) {
    .metadata {
      font-size: 16px;
    }
  }

  @media (min-width: 760px) {
    .metadata {
      padding-left: 0;
      padding-right: 0;
    }
  }

  article {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 0 3rem;
    padding-bottom: calc(var(--whitespace) * 0.5);
  }

  @media (min-width: 760px) {
    article {
      padding-left: 0;
      padding-right: 0;
    }
  }

  .tags-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    gap: 1rem 2rem;
    min-height: 50px;
    padding: 1rem 2rem;
    border-top: 1px solid var(--color-feature-1);
  }

  @media (min-width: 1100px) {
    .tags-container {
      width: calc(80% - 3rem);
      margin: 0 auto;
    }
  }
</style>
